<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">
<select id="getList" resultType="java.util.Map">
	select @rownum:=@rownum+1 AS rownum, v.* 
	from v_host_order v, (select @rownum:=(#{start}-1)) tmp
<choose>
	<when test="ho_idx == 0"> <!-- 최초접속 -->
		where ho_idx = (select ho_idx from hotel where ho_h_idx=#{h_idx} LIMIT 1)
	</when>
	<otherwise> <!-- 전체조회 -->
		where ho_idx = #{ho_idx}
	</otherwise>
</choose>
	limit #{start}, #{end};
</select>

<select id="countRecord" resultType="int">
	select count(*) from v_host_order
<choose>
	<when test="ho_idx == 0"> <!-- 최초접속 -->
		where ho_idx = (select ho_idx from hotel where ho_h_idx=#{h_idx} LIMIT 1)
	</when>
	<otherwise> <!-- 호텔 선택조회 -->
		where ho_idx = #{ho_idx}
	</otherwise>
</choose>
</select>

<select id="totalOrders" resultType="java.util.Map">
	select @rownum:=@rownum+1 AS rownum, v.* 
	from v_host_order v, (select @rownum:=(#{start}-1)) tmp
	where ho_idx IN (select ho_idx from hotel where ho_h_idx=#{h_idx})
	limit #{start}, #{end};
</select>

<select id="countAll" resultType="int">
	select count(*) from v_host_order
	where ho_idx IN (select ho_idx from hotel where ho_h_idx=#{h_idx})
</select>

<select id="getHotelList" resultType="java.util.Map">
	select @rownum:=@rownum+1 AS rownum, ho_idx, ho_name 
	from hotel, (select @rownum:=0) tmp
	where ho_h_idx=#{h_idx} order by ho_idx
</select>

<select id="getGuestProfile" resultType="com.example.syFinal.guest.model.dto.GuestDTO">
	select g_name, g_email, g_phone, g_url 
	from guest where g_idx=#{g_idx}
</select>

<select id="confirm" statementType="CALLABLE">
{	call p_order_confirm(
		#{opt, mode=IN, jdbcType=INTEGER}, 
		#{oidx, mode=IN, jdbcType=INTEGER}, 
		#{hidx, mode=IN, jdbcType=INTEGER}, 
		#{level, mode=OUT, jdbcType=INTEGER}, 
		#{result, mode=OUT, jdbcType=INTEGER}
	)
}
</select>

<select id="levelUp" statementType="CALLABLE">
{	call level_up(#{idx}) }
</select>

<select id="levelDown" statementType="CALLABLE">
{	call level_down(#{idx}) }
</select>

<!-- 체크인 날짜 배열 -->
<select id="" resultType="java.util.Map">
	select distinct o_idx, o_ckin
	from orders, hotel, hotel_detail
	where o_didx in 
		(select d_idx from hotel_detail 
			where d_ho_idx in (select ho_idx from hotel where ho_h_idx=6))
	order byo_ckin;
</select>

<!-- 예약수정 요청 목록 -->
<select id="modifyRequest" resultType="java.util.Map">
	select distinct v.* 
	from v_modify_order v, host
	where v.ho_idx 
		IN (select ho_idx from host where h_idx=#{h_idx});
</select>

<!-- 게스트의 예약변경 요청사항을 orders 테이블에 반영 -->
<select id="modify" statementType="CALLABLE">
{	call p_order_modify(
		#{oidx, mode=IN, jdbcType=INTEGER}, 
		#{ckin, mode=IN, jdbcType=DATE}, 
		#{ckout, mode=IN, jdbcType=DATE}, 
		#{adult, mode=IN, jdbcType=INTEGER}, 
		#{child, mode=IN, jdbcType=INTEGER}, 
		#{baby, mode=IN, jdbcType=INTEGER}, 
		#{hidx, mode=IN, jdbcType=INTEGER}, 
		#{level, mode=OUT, jdbcType=INTEGER}, 
		#{result, mode=OUT, jdbcType=INTEGER}
	)
}
</select>
<!-- <update id="modify">
	update orders
<trim prefix="SET" suffixOverrides=",">
	<if test="ru_startDate !='' or ru_startDate !=null" >o_ckin = #{ru_startDate},</if>
	<if test="ru_endDate !='' or ru_endDate !=null" >o_ckout = #{ru_endDate},</if>
	<if test="ru_adult !='' or ru_adult !=null" >o_adult = #{ru_adult},</if>
	<if test="ru_child !='' or ru_child !=null" >o_child = #{ru_child},</if>
	<if test="ru_baby !='' or ru_baby !=null" >o_baby = #{ru_baby}</if>
</trim>
	where o_idx=#{o_idx}
</update> -->
</mapper>